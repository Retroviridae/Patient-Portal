{"ast":null,"code":"var _jsxFileName = \"/home/retroviridae/development/code/phase_4/phase4-project/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Home(_ref) {\n  _s();\n\n  let {\n    me\n  } = _ref;\n  const [scripts, setScripts] = useState([]);\n  useEffect(() => {\n    if (me.id > 0) {\n      fetch(`/patients/${me.id}`).then(resp => resp.json()).then(data => setScripts(data.prescriptions));\n    }\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: [\"Home\", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"pt.id: \", me.id ? me.id : \"not logged in\", \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), scripts.map(script => {\n      /*#__PURE__*/\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"script.name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"script.dose\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"script.schedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Home, \"1T0V9afxuu2kdED84gXgqIkKMP4=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","Home","me","scripts","setScripts","id","fetch","then","resp","json","data","prescriptions","map","script"],"sources":["/home/retroviridae/development/code/phase_4/phase4-project/client/src/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Home( { me }){\n    const [scripts,setScripts] = useState([])\n    useEffect(()=>{\n        if (me.id>0){\n        fetch(`/patients/${me.id}`)\n        .then(resp=>resp.json())\n        .then(data=>setScripts(data.prescriptions))\n    }}\n    ,[me])\n    return (\n        <header>\n            Home\n            <p>pt.id: {me.id?me.id:\"not logged in\"} </p>\n            {scripts.map(script=>{\n                <div>\n                    <p>script.name</p>\n                    <p>script.dose</p>\n                    <p>script.schedule</p>\n                    {/* <p>script.name</p> */}\n                </div>\n\n            })}\n        </header>\n    )\n}\n\nexport default Home;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT,OAAsB;EAAA;;EAAA,IAAP;IAAEC;EAAF,CAAO;EAClB,MAAM,CAACC,OAAD,EAASC,UAAT,IAAuBL,QAAQ,CAAC,EAAD,CAArC;EACAC,SAAS,CAAC,MAAI;IACV,IAAIE,EAAE,CAACG,EAAH,GAAM,CAAV,EAAY;MACZC,KAAK,CAAE,aAAYJ,EAAE,CAACG,EAAG,EAApB,CAAL,CACCE,IADD,CACMC,IAAI,IAAEA,IAAI,CAACC,IAAL,EADZ,EAECF,IAFD,CAEMG,IAAI,IAAEN,UAAU,CAACM,IAAI,CAACC,aAAN,CAFtB;IAGH;EAAC,CALO,EAMR,CAACT,EAAD,CANQ,CAAT;EAOA,oBACI;IAAA,gCAEI;MAAA,sBAAWA,EAAE,CAACG,EAAH,GAAMH,EAAE,CAACG,EAAT,GAAY,eAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,EAGKF,OAAO,CAACS,GAAR,CAAYC,MAAM,IAAE;MACjB;MAAA;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ,eAGI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAOH,CARA,CAHL;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAeH;;GAxBQZ,I;;KAAAA,I;AA0BT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}