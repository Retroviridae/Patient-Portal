{"ast":null,"code":"var _jsxFileName = \"/home/retroviridae/development/code/phase_4/phase4-project/client/src/Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const [patients, setPatients] = useState([]);\n  const [providers, setProviders] = useState([]);\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [appointments, setAppointments] = useState([]);\n  useEffect(() => {\n    fetch('/patients').then(resp => resp.json()).then(data => setPatients(data));\n  }, []);\n  useEffect(() => {\n    fetch('/providers').then(resp => resp.json()).then(data => setProviders(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [patients.map(patient => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Patient: \", patient.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 19\n      }, this);\n    }), providers.map(provider => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Provider: \", provider.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 19\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Test, \"ggW4qmc7JXzySkNSHQuD6qBJKRU=\");\n\n_c = Test;\nexport default Test;\n\nvar _c;\n\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useState","useEffect","Test","patients","setPatients","providers","setProviders","prescriptions","setPrescriptions","appointments","setAppointments","fetch","then","resp","json","data","map","patient","name","provider"],"sources":["/home/retroviridae/development/code/phase_4/phase4-project/client/src/Test.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Test(){\n    const [patients, setPatients]=useState([])\n    const [providers, setProviders]=useState([])\n    const [prescriptions, setPrescriptions]=useState([])\n    const [appointments, setAppointments]=useState([])\n    useEffect(()=>{\n      fetch('/patients')\n      .then(resp=> resp.json())\n      .then(data => setPatients(data))\n    },[])\n  \n    useEffect(()=>{\n      fetch('/providers')\n      .then(resp=> resp.json())\n      .then(data => setProviders(data))\n    },[])\n  \n    return (\n        <div>\n            {patients.map(patient=>{\n                return (\n                  <p>Patient: {patient.name}</p>\n                )\n              })}\n                {providers.map(provider=>{\n                return (\n                  <p>Provider: {provider.name}</p>\n                )\n              })}\n        </div>\n    )\n}\n\nexport default Test;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,IAAT,GAAe;EAAA;;EACX,MAAM,CAACC,QAAD,EAAWC,WAAX,IAAwBJ,QAAQ,CAAC,EAAD,CAAtC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACS,YAAD,EAAeC,eAAf,IAAgCV,QAAQ,CAAC,EAAD,CAA9C;EACAC,SAAS,CAAC,MAAI;IACZU,KAAK,CAAC,WAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAGA,IAAI,CAACC,IAAL,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIX,WAAW,CAACW,IAAD,CAFzB;EAGD,CAJQ,EAIP,EAJO,CAAT;EAMAd,SAAS,CAAC,MAAI;IACZU,KAAK,CAAC,YAAD,CAAL,CACCC,IADD,CACMC,IAAI,IAAGA,IAAI,CAACC,IAAL,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIT,YAAY,CAACS,IAAD,CAF1B;EAGD,CAJQ,EAIP,EAJO,CAAT;EAMA,oBACI;IAAA,WACKZ,QAAQ,CAACa,GAAT,CAAaC,OAAO,IAAE;MACnB,oBACE;QAAA,wBAAaA,OAAO,CAACC,IAArB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJF,CADL,EAMSb,SAAS,CAACW,GAAV,CAAcG,QAAQ,IAAE;MACzB,oBACE;QAAA,yBAAcA,QAAQ,CAACD,IAAvB;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAGD,CAJE,CANT;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAcH;;GA/BQhB,I;;KAAAA,I;AAiCT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}